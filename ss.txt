#!/usr/bin/env python
# coding: utf-8

# ## Initial Things

# In[1]:


def saveNotes(notes):
    import pickle
    with open('notes.pkl', 'wb') as fp:
        pickle.dump(notes, fp)


# In[2]:


def importSavedNotes():
    import pickle

    # Read dictionary pkl file
    with open('notes.pkl', 'rb') as fp:
        notes = pickle.load(fp)
        return notes


# In[3]:


def showANote(note,note_id=False):


    if(note_id):
        print("Id= "+note_id)
        
    print("Title= "+note['title'])
    print("Text= "+note['text'])
    
    
    if(note_id):
        print("Time= "+note['time'])


# In[4]:


import os

#if notes file created before, reading the created file
if os.path.exists("notes.pkl"):
    notes=importSavedNotes()
    print("Old Notes Imported")
else:
    #if not, creating a notes file
    notes = {
      "first" : {
        "title" : "First Note",
        "text" : "Welcome to Notepad",
         "time": "Sun Mar 25 02:07:10 2023" 
      }
    }
    saveNotes(notes)
    print("Notes initialized")


# ## See all Notes

# In[5]:


#Reading Notes from file
notes=importSavedNotes()

all_notes=list(notes.values())
all_note_ids=list(notes.keys())

for note,note_id in zip(all_notes,all_note_ids):
    showANote(note,note_id)
    print("\n")


# ## New Note

# In[ ]:


import time

#taking input
title=input("Enter Title")
text=input("Enter Text")

#taking internal values
note_id=str(int(time.time()))
current_time=time.ctime()

#checking input
if(text==''):
    print("Text is required")
else:
    #if ok, making single dictionary
    single_dict={
        "title":title,
        "text":text,
        "time":current_time
    }

    #appending
    notes[note_id] =single_dict
    
    #saving latest notes in a file to see in future
    saveNotes(notes)
    print("Note saved successfully!!")
    
    #showing created note
    print("Created note:")
    showANote(notes[note_id])


# ## Delete a note

# In[14]:


#takin input
note_id=input("Enter Note Id=")
notes=importSavedNotes()
try:
    notes[note_id]
except:
    print("Invalid Note Id")
else:
    #showing
    print("Corresponding Note:")
    showANote(notes[note_id])

    confirmation=input("Are you sure? 1 or 0=")

    if(confirmation=='1'):
        notes.pop(note_id)
        print("Deleted Successfully")

    #saving in file
    saveNotes(notes)


# In[ ]:


